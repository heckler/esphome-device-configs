# -----------------------------------------------------------------------------
# ESPHome config file for the second version of the Balcony 02 sensors module
# CAH 2019-11-01
#
# This board has a BMP280 temperature and barometric pressure sensor,
# a PIR motion sensor and an SSD1306 monochrome OLED display; BME280 and the 
# SSD1306 are connected to the same I2C bus, and the PIR has its own GPIO.
#
#   BMP280      I2C bus
#   SSD1306     I2C bus
#   PIR         GPIO-05 / D1
#   I2C SDA     GPIO-12 / D6
#   I2C SLC     GPIO-13 / D7
#   Status      GPIO-O2 / D4 (built-in LED)
#   DHT-22      GPIO-14 / D5
#   DHT-22      GPIO-04 / D2
#
# A simple automation is defined in the device to display the sensor data
# for a short period of time when motion is detected by the PIR.
#
# Tutorials:
#
#   - https://esphome.io/cookbook/bme280_environment.html
#   - https://esphome.io/cookbook/display_time_temp_oled.html
#   - https://esphome.io/cookbook/pir.html
# 
# TODO: read '/mnt/d/Users/heckler/Dropbox/Home files/Projetos Arduino e ESP32/Home automation/sources'
#
# -----------------------------------------------------------------------------

esphome:
  name: balcony_sensors_02
  platform: ESP8266
  board: nodemcuv2
  on_boot:
    then:
      - display.page.show: page2
      - lambda: |-
          id(temperature_trend) = '=';
          id(humidity_trend) = '=';
          id(pressure_trend) = '=';

wifi:
  networks:
    - ssid: !secret wifi_ssid_1
      password: !secret wifi_password_1
    - ssid: !secret wifi_ssid_2
      password: !secret wifi_password_2
    - ssid: !secret wifi_ssid_3
      password: !secret wifi_password_3
  power_save_mode: none
  reboot_timeout: 300s
  ap:
    ssid: Balcony 02 02 Fallback Hotspot
    password: !secret ap_password

captive_portal:

ota:
  safe_mode: True
  password: !secret ota_password

logger:
  level: DEBUG
  
status_led:
  pin:
    number: D4
    inverted: True

api:

# I2C bus: https://esphome.io/components/i2c.html#i2c
i2c:
  sda: D6
  scl: D7
  scan: True
  id: bus_a


# global variables for keeping a running average of sensor values, and trend indicator characters:
globals:
  - id: average_temperature
    type: float
    restore_value: no
    initial_value: '-10000.0'
  - id: average_humidity
    type: float
    restore_value: no
    initial_value: '-10000.0'
  - id: average_pressure
    type: float
    restore_value: no
    initial_value: '-10000.0'
  - id: temperature_trend
    type: char
    restore_value: no
  - id: humidity_trend
    type: char
    restore_value: no
  - id: pressure_trend
    type: char
    restore_value: no


# SSD1306 display: https://esphome.io/components/display/ssd1306.html
display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    id: my_display
    i2c_id: bus_a
    address: 0x3C
    rotation: 180
    update_interval: 2s
    pages:
      - id: page1
        lambda: |-
          it.rectangle(0, 0, 128, 64);
          // measurement indicator letter:
          it.printf(5, 22, id(font1), TextAlign::BOTTOM_LEFT, "t");
          it.printf(5, 42, id(font1), TextAlign::BOTTOM_LEFT, "h");
          it.printf(5, 62, id(font1), TextAlign::BOTTOM_LEFT, "p");
          // actual sensor values:
          it.printf(70, 22, id(font1), TextAlign::BOTTOM_RIGHT, "%4.1f", id(balcony_temperature).state);
          it.printf(70, 42, id(font1), TextAlign::BOTTOM_RIGHT, "%4.1f", id(balcony_humidity).state);
          it.printf(70, 62, id(font1), TextAlign::BOTTOM_RIGHT, "%4d", (int) id(balcony_pressure).state);
          // units of measurement:
          it.printf(76, 18, id(font2), TextAlign::BOTTOM_LEFT, "°C");
          it.printf(78, 38, id(font2), TextAlign::BOTTOM_LEFT, "%%");
          it.printf(78, 58, id(font2), TextAlign::BOTTOM_LEFT, "hPa");
          // trend indicators:
          it.printf(120, 22, id(font1), TextAlign::BOTTOM_RIGHT, "%c", id(temperature_trend));
          it.printf(120, 42, id(font1), TextAlign::BOTTOM_RIGHT, "%c", id(humidity_trend));
          it.printf(120, 62, id(font1), TextAlign::BOTTOM_RIGHT, "%c", id(pressure_trend));
      - id: page2
        lambda: |-
          it.fill(COLOR_OFF);


font:
  - file: 'fonts/FreeSans.ttf'
    id: font1
    size: 18
    glyphs: '!"%()+,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz/\='
  - file: 'fonts/FreeSans.ttf'
    id: font2
    size: 10
    

binary_sensor:
  - platform: gpio
    pin: D1
    name: "PIR Sensor"
    device_class: motion
    on_press:
      then:
        - display.page.show: page1
        - component.update: my_display
        - delay: 30s
        - display.page.show: page2


sensor:

  # BMP280: https://esphome.io/components/sensor/bmp280.html
  - platform: bmp280
    i2c_id: bus_a
    temperature:
      name: "Balcony 02 Temperature (bmp)"
      id: balcony_temperature
      oversampling: 16x
      on_value:
        lambda: |-
          float old_value = (float) id(average_temperature);
          if (id(average_temperature) < -1000)
            id(average_temperature) = (float) x;
          else
            id(average_temperature) = (4*id(average_temperature) + x) / 5;
          float delta = (float) x - id(average_temperature);
          if (fabs(delta) <= 0.2)
            id(temperature_trend) = '=';
          else
            if (delta > 0)
              id(temperature_trend) = '/';
            else
              id(temperature_trend) = '\\';
          ESP_LOGV("main", "=========> Updating average_temperature; old: %.4f,    read: %.4f    new: %.4f    trend: %c", old_value, x, id(average_temperature), id(temperature_trend));
    pressure:
      name: "Balcony 02 Pressure"
      id: balcony_pressure
      on_value:
        lambda: |-
          float old_value = (float) id(average_pressure);
          if (id(average_pressure) < -1000)
            id(average_pressure) = (float) x;
          else
            id(average_pressure) = (4*id(average_pressure) + x) / 5;
          float delta = (float) x - id(average_pressure);
          if (fabs(delta) <= 0.2)
            id(pressure_trend) = '=';
          else
            if (delta > 0)
              id(pressure_trend) = '/';
            else
              id(pressure_trend) = '\\';
          ESP_LOGV("main", "=========> Updating average_pressure; old: %.4f,    read: %.4f    new: %.4f    trend: %c", old_value, x, id(average_pressure), id(pressure_trend));
    address: 0x77
    update_interval: 60s

  # DHT-22 on the outside (balcony): 
  - platform: dht
    model: AM2302
    pin: D2
    temperature:
      name: "Balcony 02 Temperature (dht)"
    humidity:
      name: "Balcony 02 Humidity"
      id: balcony_humidity
      on_value:
        lambda: |-
          float old_value = (float) id(average_humidity);
          if (id(average_humidity) < -1000)
            id(average_humidity) = (float) x;
          else
            id(average_humidity) = (4*id(average_humidity) + x) / 5;
          float delta = (float) x - id(average_humidity);
          if (fabs(delta) <= 0.2)
            id(humidity_trend) = '=';
          else
            if (delta > 0)
              id(humidity_trend) = '/';
            else
              id(humidity_trend) = '\\';
          ESP_LOGV("main", "=========> Updating average_humidity; old: %.4f,    read: %.4f    new: %.4f    trend: %c", old_value, x, id(average_humidity), id(humidity_trend));
    update_interval: 60s

  # DHT-22 on the inside (living room)
  - platform: dht
    model: AM2302
    pin: D5
    temperature:
      name: "Living Room 02 Temperature"
    humidity:
      name: "Living Room 02 Humidity"
    update_interval: 60s

  - platform: wifi_signal
    name: "Balcony 02 WiFi Signal"

  - platform: uptime
    name: "Balcony 02 Uptime"
    id: uptime_sensor


text_sensor:
  - platform: version
    name: "Balcony 02 Version"


switch:
  - platform: restart
    name: "Balcony 02 Restart"
