# -----------------------------------------------------------------------------
# ESPHome config file for the second version of the balcony sensors module
# CAH 2019-11-01
#
# This board has a BME280 temperature, humidity and barometric pressure sensor,
# a PIR motion sensor and an SSD1306 monochrome OLED display; BME280 and the 
# SSD1306 are connected to the same I2C bus, and the PIR has its own GPIO.
#
#   BME280      I2C bus
#   SSD1306     I2C bus
#   PIR         GPIO-05 / D1
#   I2C SDA     GPIO-12 / D6
#   I2C SLC     GPIO-13 / D7
#   Status      GPIO-O2 / D4 (built-in LED)
#
# A simple automation is defined in the device to display the sensor data
# for a short period of time when motion is detected by the PIR.
#
# Tutorials:
#
#   - https://esphome.io/cookbook/bme280_environment.html
#   - https://esphome.io/cookbook/display_time_temp_oled.html
#   - https://esphome.io/cookbook/pir.html
# 
# TODO: read '/mnt/d/Users/heckler/Dropbox/Home files/Projetos Arduino e ESP32/Home automation/sources'
#
# -----------------------------------------------------------------------------

esphome:
  name: balcony_sensors_02
  platform: ESP8266
  board: nodemcuv2

wifi:
  networks:
    - ssid: !secret wifi_ssid_1
      password: !secret wifi_password_1
    - ssid: !secret wifi_ssid_2
      password: !secret wifi_password_2
    - ssid: !secret wifi_ssid_3
      password: !secret wifi_password_3
  power_save_mode: light
  reboot_timeout: 300s
  ap:
    ssid: Balcony 02 Fallback Hotspot
    password: !secret ap_password

captive_portal:

ota:
  safe_mode: True
  password: !secret ota_password

logger:
  level: DEBUG
  
status_led:
  pin:
    number: D4
    inverted: True

api:

# I2C bus: https://esphome.io/components/i2c.html#i2c
i2c:
  sda: D6
  scl: D7
  scan: True
  id: bus_a

# SSD1306 display: https://esphome.io/components/display/ssd1306.html
display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    id: my_display
    address: 0x3C
    rotation: 180
    update_interval: 2s
    pages:
      - id: page1
        lambda: |-
          it.printf(64, 0, id(font1), TextAlign::TOP_CENTER, "Hello ESP8266");
          it.printf(127, 60, id(font1), TextAlign::BASELINE_RIGHT , "%8.0f", id(uptime_sensor).state);
      - id: page2
        lambda: |-
          it.fill(COLOR_OFF);


font:
  - file: 'fonts/FreeSans.ttf'
    id: font1
    size: 16
  - file: 'fonts/FreeSans.ttf'
    id: font2
    size: 14
    

binary_sensor:
  - platform: gpio
    pin: D1
    name: "PIR Sensor"
    device_class: motion
    on_press:
      then:
        - display.page.show: page1
        - component.update: my_display
        - delay: 10s
        - display.page.show: page2


sensor:

  # BME280: https://esphome.io/components/sensor/bme280.html
  - platform: bme280
    temperature:
      name: "Balcony Temperature"
      oversampling: 16x
    pressure:
      name: "Balcony Pressure"
    humidity:
      name: "Balcony Humidity"
    address: 0x77
    update_interval: 60s

  - platform: wifi_signal
    name: "Balcony WiFi Signal"

  - platform: uptime
    name: "Balcony Uptime"
    id: uptime_sensor


text_sensor:
  - platform: version
    name: "Balcony Version"


switch:
  - platform: restart
    name: "Balcony Restart"
